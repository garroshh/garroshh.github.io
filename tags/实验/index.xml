<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>实验 - 标签 - LoveIt</title><link>https://garroshh.me/tags/%E5%AE%9E%E9%AA%8C/</link><description>实验 - 标签 - LoveIt</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>garroshh.jia@gmail.com (garroshh)</managingEditor><webMaster>garroshh.jia@gmail.com (garroshh)</webMaster><copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright><lastBuildDate>Thu, 14 May 2020 14:13:46 +0800</lastBuildDate><atom:link href="https://garroshh.me/tags/%E5%AE%9E%E9%AA%8C/" rel="self" type="application/rss+xml"/><item><title>服务治理</title><link>https://garroshh.me/%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86/</link><pubDate>Wed, 13 May 2020 18:29:31 +0800</pubDate><author>作者</author><guid>https://garroshh.me/%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86/</guid><description>为了使系统不出现单点故障，服务需要有多个实例增加冗余来提高高可用性，这就需要负载均衡技术；为了请求处理的高效性，又要求有会话保持功能；重试是</description></item><item><title>实验总结</title><link>https://garroshh.me/%E5%AE%9E%E9%AA%8C%E6%80%BB%E7%BB%93/</link><pubDate>Thu, 14 May 2020 14:13:46 +0800</pubDate><author>作者</author><guid>https://garroshh.me/%E5%AE%9E%E9%AA%8C%E6%80%BB%E7%BB%93/</guid><description>1. 环境准备 1.1. Kubernetes 搭建 1.2. Istio 部署 2. 流量监控 2.1. 预先准备：安装插件 2.2. 调用链跟踪 2.3. 指标监控 2.4. Grafana 2.5. 服务网格监控 3. 灰度发布 3.1. 预先准备：将所有流量路由到各服务</description></item><item><title>多集群管理</title><link>https://garroshh.me/%E5%A4%9A%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86/</link><pubDate>Thu, 14 May 2020 11:47:35 +0800</pubDate><author>作者</author><guid>https://garroshh.me/%E5%A4%9A%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86/</guid><description>在多个集群中部署和管理应用，能带来更好的故障隔离性和扩展性。Istio 的多集群模型主要分为两类：多控制面模型和单控制面模型。 由于多控制面模型</description></item><item><title>服务保护</title><link>https://garroshh.me/%E6%9C%8D%E5%8A%A1%E4%BF%9D%E6%8A%A4/</link><pubDate>Thu, 14 May 2020 11:17:30 +0800</pubDate><author>作者</author><guid>https://garroshh.me/%E6%9C%8D%E5%8A%A1%E4%BF%9D%E6%8A%A4/</guid><description>Istio 的安全功能十分强大，安全场景包括对网关的加密、服务间的访问控制、认证和授权。网关加密由 Ingress Gateway 实现，访问控制依赖 Mixer，认证和授权主要由 C</description></item><item><title>自动化灰度发布</title><link>https://garroshh.me/%E8%87%AA%E5%8A%A8%E5%8C%96%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83/</link><pubDate>Wed, 13 May 2020 18:21:35 +0800</pubDate><author>作者</author><guid>https://garroshh.me/%E8%87%AA%E5%8A%A8%E5%8C%96%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83/</guid><description>之前的灰度发布，包括策略配置和指标分析，都需要人工干预。在持续交付过程中，为了解决部署和管理的复杂性，需要通过自动化工具实现基于权重的灰度发</description></item><item><title>灰度发布</title><link>https://garroshh.me/%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83/</link><pubDate>Wed, 13 May 2020 18:03:47 +0800</pubDate><author>作者</author><guid>https://garroshh.me/%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83/</guid><description>1. 预先准备：将所有流量路由到各个服务 v1 版本 将 fronted，advertisement 和 forecast 服务的 v1 版本部署到集群中，命名空间是 weather</description></item><item><title>流量监控</title><link>https://garroshh.me/%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7/</link><pubDate>Mon, 11 May 2020 19:01:49 +0800</pubDate><author>作者</author><guid>https://garroshh.me/%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7/</guid><description>Istio 的 Proxy 通过拦截系统中所有网络的通信，来提供可用于获得整个应用的可观察性的指标和数据。比如：若一个服务响应过慢是由 CPU 占用率过高导致的，则可以采</description></item><item><title>Helm3部署Istio 1.4</title><link>https://garroshh.me/helm3%E9%83%A8%E7%BD%B2istio-1.4/</link><pubDate>Mon, 11 May 2020 18:56:48 +0800</pubDate><author>作者</author><guid>https://garroshh.me/helm3%E9%83%A8%E7%BD%B2istio-1.4/</guid><description>1. 安装 Helm3 2. 安装 Istio 1.4 3. 修改 Istio 参数 1 vim install/kubernetes/helm/istio/values.yaml 参数 值 描述 grafana.enabled true 安装 Grafana 插件 tracing.enabled true 安装 Jaeger 插件 kiali.enabled true 安装 Kiali 插件 global.proxy.disablePolicyChecks false 启用策略检查功能 global.proxy.accessLogFile &amp;ldquo;/dev/stdout&amp;rdquo; 获取 Envoy 的访问日志 4. 修改 Istio Gateway 类</description></item><item><title>Kubeadm搭建Kubernetes集群</title><link>https://garroshh.me/kubeadm%E6%90%AD%E5%BB%BAkubernetes%E9%9B%86%E7%BE%A4/</link><pubDate>Mon, 11 May 2020 18:40:05 +0800</pubDate><author>作者</author><guid>https://garroshh.me/kubeadm%E6%90%AD%E5%BB%BAkubernetes%E9%9B%86%E7%BE%A4/</guid><description>1. 机器配置 OS 主机名 配置 ip Centos7(Docker 19.03.5) m-100 4C8G 10.12.1.100 Centos7(Docker 19.03.5) w-101 4C8G 10.12.1.101 Centos7(Docker 19.03.5) w-102 4C8G 10.12.1.102 2. 主节点和工作节点配置 安装 kubeadm, kubelet 和 kubectl，其中 kubectl 工作节点可选择性安装 1 2 3 4 5 6</description></item><item><title>网格可视化</title><link>https://garroshh.me/%E7%BD%91%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/</link><pubDate>Mon, 11 May 2020 18:18:36 +0800</pubDate><author>作者</author><guid>https://garroshh.me/%E7%BD%91%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96/</guid><description>开始之前 首先要安装 Kiali 插件，然后使用 Web 界面来查看网格内的服务图以及 Istio 配置对象； 下面的介绍假设已经安装了 Helm，并使用 Helm 来安装 Kiali。 1.</description></item></channel></rss>